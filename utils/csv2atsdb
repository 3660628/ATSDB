#!/usr/bin/perl

#
# This file is part of ATSDB.
#
# ATSDB is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ATSDB is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with ATSDB.  If not, see <http://www.gnu.org/licenses/>.
#

# -----------------------------------------------------------------
# produce a sqlite3 DB from CSV file(s) having surveillance reports
# the DB file is ready to be imported by ATSDB
# -----------------------------------------------------------------

# works with direct export from ATSDB having the option "Use Presentation" deactivated

our $VERSION = "1.00";

sub usage
{
    my $err = shift and select STDERR;
    print <<EOU;
usage: $0 ( -f <file> | -l <file list> ) [ -o <file> ] [ -n <name> ] [ -t <type> ] [ -keep ] [ -d <delimiter> ] [ -s <schema> ] [ -b <lines> ] [-h]

       -f <file> ::= file name of the surveillance CSV file
       -l <file list> ::= file name of a surveillance CSV file list
            each line has the form:
            <type>;[<name>];<filename>;comment
            ex:
               A;;ADS-Bxchg.2017-11-30.07Z-08Z.csv; this file has no name
               A;adsb1;ADS-Bxchg.2017-11-30.08Z-09Z.csv

       -o <file> ::= file name of the output surveillance sqlite DB file
            (default: same basename as the CSV input file with extension '.db')

       -n <name> ::= sensor name

       -t <type> ::= { 'T' ::= tracker, 'W' ::= WAM, 'A' ::= ADS-B, 'R' ::= radar }

       -d <delimiter> ::= CSV delimiter (default: semicolon ';')

       -s <schema> ::= filename containig schema to be used instead of the default schema

       -b <lines> ::= split the CSV file into chunks of 'lines' each
            a qualifier (multiplier factor) can be used
            { 'K' ::= 10x3; 'M' ::= 10x6; 'G' ::= 10x9 }

       -keep ::= keep the existing database and append new data to it

       -h ::= this help

EOU
    exit $err;
}

# modify VERIF schema with
# 'NOT NULL' => 'DEFAULT NULL'
# remove statements 'KEY' and 'PRIMARY KEY'
# remove statements 'AUTO_INCREMENT'
# leave only : cmp_aa, le_ds, ds_... and sd_... (only data)
my $defaultSchemaFile = "/tmp/.ATSDBschema";

my $defaultSchema = qq{
CREATE TABLE \`cmp_aa\` \(
  \`REC_NUM\` int\(10\) unsigned DEFAULT NULL COMMENT \'Record unique identifier the measurements belong to.\',
  \`ACTION_ID\` smallint\(5\) unsigned DEFAULT NULL COMMENT \'Action identifier.\',
  \`RANGE_ERROR_M\` double DEFAULT NULL COMMENT \'Range error.\',
  \`AZIMUTH_ERROR_DEG\` double DEFAULT NULL COMMENT \'Azimuth error.\',
  \`HORIZONTAL_ERROR_M\` double DEFAULT NULL COMMENT \'Position error \(positions projected to the Earth\'\'s surface\).\',
  \`X_ERROR_M\` double DEFAULT NULL COMMENT \'Position error measured on X axis.\',
  \`Y_ERROR_M\` double DEFAULT NULL COMMENT \'Position error measured on Y axis.\',
  \`ALONG_TRACK_ERROR_M\` double DEFAULT NULL COMMENT \'Longitudinal error related to the RRT course.\',
  \`ACROSS_TRACK_ERROR_M\` double DEFAULT NULL COMMENT \'Transversal error related to the RRT course.\',
  \`GROUNDSPEED_ERROR_KT\` double DEFAULT NULL COMMENT \'Ground speed error related to the local tracker.\',
  \`GROUNDCOURSE_ERROR_DEG\` double DEFAULT NULL COMMENT \'Course error related to the local tracker.\',
  \`VERTICALSPEED_ERROR_FTM\` double DEFAULT NULL COMMENT \'Vertical speed error related to the RRT course.\',
  \`LATENCY_S\` double DEFAULT NULL COMMENT \'Along residual error divided by the instantaneous groundspeed.\',
  \`IS_JUMP\` char\(1\) DEFAULT NULL COMMENT \'\'\'Y\'\' if the plot is a jump, \'\'N\'\' otherwise\',
  \`IS_CONSEC_LARGE_ERROR\` char\(1\) DEFAULT NULL COMMENT \'\'\'Y\'\' if the plot is part of a consecutive secuence of large erros., \'\'N\'\' otherwise\',
\) ENGINE=MyISAM DEFAULT CHARSET=latin1 COMMENT=\'Basic measurements produced by the Accuracy Analysis CMP.\';

CREATE TABLE \`ds_ads\` \(
  \`DS_ID\` smallint\(5\) unsigned DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`UPDATE_CYCLE_MS\` smallint\(6\) DEFAULT NULL COMMENT \' \',
  \`COVERAGE_MAP_PATH\` varchar\(256\) DEFAULT NULL COMMENT \'Path of latest imported EMS cluster.dat.\',
  \`COVERAGE_MAP_FILE\` longblob COMMENT \'EMS coverage map.\',
  \`TIME_BIAS_SEC\` double DEFAULT NULL COMMENT \' \',
  \`TIME_SD_SEC\` double DEFAULT NULL COMMENT \' \',
  \`REFERENCE_PERIOD\` double DEFAULT NULL COMMENT \' \',
  \`POS_LAT_DEG\` double DEFAULT NULL COMMENT \' \',
  \`POS_LONG_DEG\` double DEFAULT NULL,
\) ENGINE=MyISAM DEFAULT CHARSET=latin1 COMMENT=\' \';

CREATE TABLE \`ds_mlat\` \(
  \`DS_ID\` smallint\(5\) unsigned DEFAULT NULL COMMENT \' \',
  \`ML_TYPE\` varchar\(10\) DEFAULT NULL COMMENT \' \',
  \`ACC_ALT\` double DEFAULT NULL COMMENT \' \',
  \`ACC_LAT_LONG\` double DEFAULT NULL COMMENT \' \',
  \`UPDATE_CYCLE_MS\` smallint\(6\) DEFAULT NULL COMMENT \' \',
  \`COVERAGE_MAP_PATH\` varchar\(256\) DEFAULT NULL COMMENT \'Path of imported EMS coverage map.\',
  \`COVERAGE_MAP_FILE\` longblob COMMENT \'EMS coverage map.\',
  \`ERROR_MAP_PATH\` varchar\(256\) DEFAULT NULL COMMENT \'Path of latest imported MLAT error 3D map.\',
  \`ERROR_MAP_FILE\` longblob COMMENT \'MLAT error 3D map imported as LONGBLOB.\',
  \`ACTIVE_ERROR_MAP_ID\` mediumint\(9\) DEFAULT NULL COMMENT \'MLAT error 3D map ID in the LE_MLAT_ERROR_MAPS.\',
  \`LONG_BIAS_DEG\` double DEFAULT NULL COMMENT \' \',
  \`LAT_BIAS_DEG\` double DEFAULT NULL COMMENT \' \',
  \`ALT_BIAS_M\` double DEFAULT NULL COMMENT \' \',
  \`TIME_BIAS_SEC\` double DEFAULT NULL COMMENT \' \',
  \`POS_SD_M\` double DEFAULT NULL COMMENT \' \',
  \`ALT_SD_M\` double DEFAULT NULL COMMENT \' \',
  \`TIME_SD_SEC\` double DEFAULT NULL COMMENT \' \',
  \`WGS_ELEV_CARTESIAN_M\` double DEFAULT NULL COMMENT \'Altitude from the ellipsoid \(WGS\'\'84\) of the sensor\'\'s cartesian centre.\',
  \`REFERENCE_PERIOD\` double DEFAULT NULL COMMENT \' \',
  \`COORD_SYS\` enum\(\'W\',\'C\'\) DEFAULT NULL COMMENT \'WGS or cartesian\',
  \`POS_LAT_DEG\` double DEFAULT NULL COMMENT \'Latitude coordinate of the sensor\'\'s cartesian centre.\',
  \`POS_LONG_DEG\` double DEFAULT NULL COMMENT \'Longitude coordinate of the sensor\'\'s cartesian centre.\',
  \`LONG_BIAS_M\` double DEFAULT NULL COMMENT \'Longitude coordinate bias assigned to the sensor.\',
  \`LAT_BIAS_M\` double DEFAULT NULL COMMENT \'Latitude coordinate bias assigned to the sensor.\',
  \`ALT_BIAS_FT\` double DEFAULT NULL COMMENT \'Altitude coordinate bias assigned to the sensor.\',
  \`TIME_BIAS_S\` double DEFAULT NULL COMMENT \'Time bias assigned to the sensor.\',
  \`TIME_SD_S\` double DEFAULT NULL COMMENT \'Time noise assigned to the sensor.\',
  \`ALT_SD_FT\` double DEFAULT NULL COMMENT \' \',
  \`POS_LONG_SD_M\` double DEFAULT NULL COMMENT \'Noise assigned to longitude coordinate for the sensor.\',
  \`POS_LAT_SD_M\` double DEFAULT NULL COMMENT \'Noise assigned to latitude coordinate for the sensor.\',
  \`POS_LATLONG_SD_CORREL\` double DEFAULT NULL COMMENT \'Correlation coeficient between LONG_SD_M and LAT_SD_M values.\',
  \`TIME_BIAS_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'Time Bias OTR behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`POS_BIAS_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'Position Bias OTR behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`USE_NOISE\` tinyint\(4\) DEFAULT NULL COMMENT \'use noise from error map instead of reported sigma\',
  \`ERRORMAP_USAGE\` tinyint\(4\) DEFAULT NULL COMMENT \'error map usage in OTR\',
  \`ERRORMAP_ORIGIN_LAT_DEG\` double DEFAULT NULL COMMENT \'Geographical characteristics: Origin latitude\',
  \`ERRORMAP_ORIGIN_LONG_DEG\` double DEFAULT NULL COMMENT \'Geographical characteristics: Origin longitude\',
  \`ERRORMAP_ORIGIN_VERT_FT\` double DEFAULT NULL COMMENT \'Geographical characteristics: Origin vertical\',
  \`ERRORMAP_STEP_LAT_DEG\` double DEFAULT NULL COMMENT \'Geographical characteristics: Step latitude\',
  \`ERRORMAP_STEP_LONG_DEG\` double DEFAULT NULL COMMENT \'Geographical characteristics: Step longitude\',
  \`ERRORMAP_STEP_VERT_FT\` double DEFAULT NULL COMMENT \'Geographical characteristics: Step vertical\',
  \`ERRORMAP_NUM_CELLS_LAT\` double DEFAULT NULL COMMENT \'Geographical characteristics: Number of cells latitude\',
  \`ERRORMAP_NUM_CELLS_LONG\` double DEFAULT NULL COMMENT \'Geographical characteristics: Number of cells longitude\',
  \`ERRORMAP_NUM_CELLS_VERT\` double DEFAULT NULL COMMENT \'Geographical characteristics: Number of cells vertical\',
  \`USE_IN_BIAS_EST\` tinyint\(4\) DEFAULT \'1\' COMMENT \'use this Data source in OTR bias estimation stage\',
  \`USE_IN_RECONS_STAGE\` tinyint\(4\) DEFAULT \'1\' COMMENT \'use this Data source in OTR reconstruction stage\',
\) ENGINE=MyISAM DEFAULT CHARSET=latin1 COMMENT=\' \';

CREATE TABLE \`ds_radar\` \(
  \`DS_ID\` smallint\(5\) unsigned DEFAULT NULL COMMENT \' \',
  \`POS_LAT_DEG\` double DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`POS_LONG_DEG\` double DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`RADAR_TYPE_ID\` varchar\(2\) DEFAULT NULL DEFAULT \'P\' COMMENT \' \',
  \`GROUND_ALTITUDE_AMSL_M\` double DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`TOWER_HEIGHT_M\` smallint\(6\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`CO_MOUNTED\` enum\(\'Y\',\'N\'\) DEFAULT NULL DEFAULT \'N\' COMMENT \' \',
  \`CONTROL_CENTRE_ID\` varchar\(20\) DEFAULT NULL DEFAULT \'-\' COMMENT \' \',
  \`COUNTRY_ID\` varchar\(4\) DEFAULT NULL DEFAULT \'D\' COMMENT \' \',
  \`PRI_ELECTRICAL_HEIGHT_M\` smallint\(6\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`PRI_COS_DEG\` tinyint\(4\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`PRI_MIN_IR_NM\` tinyint\(4\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`PRI_MAX_IR_NM\` smallint\(6\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`SSR_ELECTRICAL_HEIGHT_M\` smallint\(6\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`SSR_COS_DEG\` tinyint\(4\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`SSR_MIN_IR_NM\` smallint\(6\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`SSR_MAX_IR_NM\` smallint\(6\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`MODES_ELECTRICAL_HEIGHT_M\` smallint\(6\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`MODES_COS_DEG\` tinyint\(4\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`MODES_MIN_IR_NM\` tinyint\(4\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`MODES_MAX_IR_NM\` smallint\(6\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`MODES_LOCKOUT_RANGE_NM\` tinyint\(4\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`CALC_TOD_TOLERANCE_MS\` smallint\(6\) DEFAULT NULL DEFAULT \'3000\' COMMENT \' \',
  \`EMM_EXPECTED\` char\(1\) DEFAULT NULL DEFAULT \'N\' COMMENT \' \',
  \`EMM_TOLERANCE_MS\` smallint\(6\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`EMM_RETRIES\` tinyint\(4\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`SMM_EXPECTED\` char\(1\) DEFAULT NULL DEFAULT \'N\' COMMENT \' \',
  \`SMM_TOLERANCE_MS\` smallint\(6\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`NUM_SECTORS\` tinyint\(4\) DEFAULT NULL DEFAULT \'32\' COMMENT \' \',
  \`REVOLUTION_TIME_MS\` smallint\(6\) DEFAULT NULL DEFAULT \'10000\' COMMENT \' \',
  \`REVOLUTION_TIME_TOLERANCE_MS\` smallint\(6\) DEFAULT NULL DEFAULT \'2500\' COMMENT \' \',
  \`EST_REV_PERIOD_TOLERANCE_MS\` smallint\(6\) DEFAULT NULL DEFAULT \'2500\' COMMENT \' \',
  \`EST_REV_PERIOD_TOLERANCE_VAR\` double DEFAULT NULL DEFAULT \'1\' COMMENT \' \',
  \`RANGE_GAIN\` double DEFAULT NULL DEFAULT \'1\' COMMENT \' \',
  \`RANGE_OFFSET_NM\` double DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`AZM_OFFSET_DEG\` double DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`COORD_SYS\` enum\(\'PS\',\'PC\',\'C\'\) DEFAULT NULL DEFAULT \'PS\' COMMENT \'Polar with slant range, polar with corrected range or cartesian\',
  \`RANGE_POLAR_PREC_NM\` double DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`AZM_POLAR_PREC_DEG\` double DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`X_CART_PREC_NM\` double DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`Y_CART_PREC_NM\` double DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`USAGE_AREA_ID\` char\(1\) DEFAULT NULL DEFAULT \'T\' COMMENT \' \',
  \`USAGE_IS_MILITARY\` enum\(\'Y\',\'N\'\) DEFAULT NULL DEFAULT \'N\' COMMENT \' \',
  \`USAGE_IS_FOR_EVALUATION\` char\(1\) DEFAULT NULL DEFAULT \'Y\' COMMENT \' \',
  \`USAGE_TYPE_ID\` char\(1\) DEFAULT NULL DEFAULT \'O\' COMMENT \' \',
  \`USAGE_SIM_ID\` char\(1\) DEFAULT NULL DEFAULT \'R\' COMMENT \' \',
  \`USAGE_GEN_ID\` char\(1\) DEFAULT NULL DEFAULT \'U\' COMMENT \' \',
  \`PRI_SCREENING_PATH\` varchar\(256\) DEFAULT NULL COMMENT \'Path of latest imported PRI screening.\',
  \`PRI_SCREENING_FILE\` longblob COMMENT \'PRI screening imported as LONGBLOB.\',
  \`SSR_SCREENING_PATH\` varchar\(256\) DEFAULT NULL COMMENT \'Path of latest imported SSR screening.\',
  \`SSR_SCREENING_FILE\` longblob COMMENT \'SSR screening imported as LONGBLOB.\',
  \`EMS_COVERAGE_MAPS_PATH\` varchar\(256\) DEFAULT NULL COMMENT \'Path of latest imported EMS map.\',
  \`EMS_COVERAGE_MAPS_FILE\` longblob COMMENT \'EMS system maps + cluster.dat imported as LONGBLOB.\',
  \`ACTIVE_EMS_SOLUTION_ENTRY\` tinyint\(4\) DEFAULT NULL COMMENT \'Active state of the cluster.\',
  \`EMS_NODE_ID\` tinyint\(4\) DEFAULT NULL COMMENT \'EMS node identifier in the cluster.\',
  \`EMS_APPLICABLE_FOR_PRI_SSR\` char\(1\) DEFAULT NULL COMMENT \' \',
  \`PRI_RANGE_BIAS_M\` double DEFAULT NULL COMMENT \' \',
  \`PRI_RANGE_GAIN\` double DEFAULT NULL COMMENT \' \',
  \`PRI_AZIMUTH_BIAS_DEG\` double DEFAULT NULL COMMENT \' \',
  \`PRI_AZM_ECC_VALUE_DEG\` double DEFAULT NULL COMMENT \' \',
  \`PRI_AZM_ECC_ANGLE_DEG\` double DEFAULT NULL COMMENT \' \',
  \`PRI_RANGE_ERROR_SD_M\` double DEFAULT NULL COMMENT \' \',
  \`PRI_AZIMUTH_ERROR_SD_DEG\` double DEFAULT NULL COMMENT \' \',
  \`PRI_MIN_ELEV_ANGLE_DEG\` double DEFAULT NULL COMMENT \' \',
  \`PRI_3D_HEIGHT_BIAS_FT\` double DEFAULT NULL COMMENT \' \',
  \`PRI_3D_HEIGHT_ERROR_SD_FT\` double DEFAULT NULL COMMENT \' \',
  \`SSR_RANGE_BIAS_M\` double DEFAULT NULL COMMENT \' \',
  \`SSR_RANGE_GAIN\` double DEFAULT NULL COMMENT \' \',
  \`SSR_AZIMUTH_BIAS_DEG\` double DEFAULT NULL COMMENT \' \',
  \`SSR_AZM_ECC_VALUE_DEG\` double DEFAULT NULL COMMENT \' \',
  \`SSR_AZM_ECC_ANGLE_DEG\` double DEFAULT NULL COMMENT \' \',
  \`SSR_RANGE_ERROR_SD_M\` double DEFAULT NULL COMMENT \' \',
  \`SSR_AZIMUTH_ERROR_SD_DEG\` double DEFAULT NULL COMMENT \' \',
  \`SSR_MIN_ELEV_ANGLE_DEG\` double DEFAULT NULL COMMENT \' \',
  \`TIME_ERROR_SD_SEC\` double DEFAULT NULL COMMENT \' \',
  \`ACTIVE_BIASES_ID\` mediumint\(9\) DEFAULT NULL COMMENT \' \',
  \`ACTIVE_SDS_ID\` smallint\(5\) unsigned DEFAULT NULL COMMENT \' \',
  \`WGS_ELEV_CARTESIAN_M\` double DEFAULT NULL COMMENT \' \',
  \`MODES_RANGE_BIAS_M\` double DEFAULT NULL COMMENT \'Known value of range bias parameter for Mode-S.\',
  \`MODES_RANGE_GAIN\` double DEFAULT NULL COMMENT \'Known value of range gain parameter for Mode-S \(non-dimensional\).\',
  \`MODES_AZIMUTH_BIAS_DEG\` double DEFAULT NULL COMMENT \'Known value of azimuth bias parameter for Mode-S.\',
  \`MODES_AZM_ECC_VALUE_DEG\` double DEFAULT NULL COMMENT \'Known value of azimuth eccentricity parameter for Mode-S.\',
  \`MODES_AZM_ECC_ANGLE_DEG\` double DEFAULT NULL COMMENT \'Known value of azimuth eccentricity angle parameter for Mode-S.\',
  \`MODES_RANGE_ERROR_SD_M\` double DEFAULT NULL COMMENT \'Known value of range error \(noise\) parameter for Mode-S.\',
  \`MODES_AZIMUTH_ERROR_SD_DEG\` double DEFAULT NULL COMMENT \'Known value of azimuth error \(noise\) parameter for Mode-S.\',
  \`IS3M\` char\(1\) DEFAULT NULL COMMENT \'Whether the modeS radar acts as a 3M radar.\',
  \`RANGE_BIAS_PSR_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'primary range bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`RANGE_BIAS_SSR_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'secondary range bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`RANGE_BIAS_MODES_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'mode S range bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`RANGE_GAIN_BIAS_PSR_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'primary range gain bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`RANGE_GAIN_BIAS_SSR_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'secondary range gain bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`RANGE_GAIN_BIAS_MODES_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'mode S range gain bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`AZIMUTH_BIAS_PSR_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'primary azimuth bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`AZIMUTH_BIAS_SSR_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'secondary azimuth bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`AZIMUTH_BIAS_MODES_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'mode S azimuth accentricity angle bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`RANGE_NOISE_PSR_BEHAV\` tinyint\(4\) DEFAULT \'1\' COMMENT \'primary range noise behaviour. Possible values: 0 - Not calculated, 1 - Calculated\',
  \`RANGE_NOISE_SSR_BEHAV\` tinyint\(4\) DEFAULT \'1\' COMMENT \'secondary range noise behaviour. Possible values: 0 - Not calculated, 1 - Calculated\',
  \`RANGE_NOISE_MODES_BEHAV\` tinyint\(4\) DEFAULT \'1\' COMMENT \'mode S range noise behaviour. Possible values: 0 - Not calculated, 1 - Calculated\',
  \`AZIMUTH_NOISE_PSR_BEHAV\` tinyint\(4\) DEFAULT \'1\' COMMENT \'primary azimuth  noise behaviour. Possible values: 0 - Not calculated, 1 - Calculated\',
  \`AZIMUTH_NOISE_SSR_BEHAV\` tinyint\(4\) DEFAULT \'1\' COMMENT \'secondary azimuth  noise behaviour. Possible values: 0 - Not calculated, 1 - Calculated\',
  \`AZIMUTH_NOISE_MODES_BEHAV\` tinyint\(4\) DEFAULT \'1\' COMMENT \'mode S azimuth noise behaviour. Possible values: 0 - Not calculated, 1 - Calculated\',
  \`USE_IN_BIAS_EST\` tinyint\(4\) DEFAULT \'1\' COMMENT \'use this Data source in OTR bias estimation stage\',
  \`USE_IN_RECONS_STAGE\` tinyint\(4\) DEFAULT \'1\' COMMENT \'use this Data source in OTR reconstruction stage\',
  \`MAX_UNAMBIGUOUS_RANGE_NM\` double DEFAULT NULL COMMENT \'Maximum unambiguous range of the radar.Measured in NM\',
  \`AZ_BIAS_ECCENT_PSR_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'primary azimuth eccentricity value bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`AZ_BIAS_ECCENT_SSR_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'secondary azimuth eccentricity value bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`AZ_BIAS_ECCENT_MODES_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'modes azimuth eccentricity value bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`TIME_BIAS_PSR_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'Primary time value bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`TIME_BIAS_SSR_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'Secondary time value bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`TIME_BIAS_MODES_BEHAV\` tinyint\(4\) DEFAULT NULL COMMENT \'Mode S time value bias behaviour. Possible values: 0 - Calculated using an initial value stored in Database , 1 - Calculated using an initial neutral value, 2 - Not Calculated. Fixed value\',
  \`PRI_TIME_BIAS_SEC\` double DEFAULT NULL COMMENT \'Known value of time bias parameter for Primary Antenna.\',
  \`SSR_TIME_BIAS_SEC\` double DEFAULT NULL COMMENT \'Known value of time bias parameter for Secondary Antenna.\',
  \`MODES_TIME_BIAS_SEC\` double DEFAULT NULL COMMENT \'Known value of time bias parameter for Mode-S Antenna.\',
  \`TIME_BIAS_SEC\` double DEFAULT NULL COMMENT \'Field obsolete since TRES version 1.3 build 4467.\',
  \`SOURCE_COORD_SYS\` enum\(\'PS\',\'SO\',\'LO\',\'PC\'\) DEFAULT NULL,
  \`EMS_MAP_SELECTION\` tinyint\(1\) DEFAULT NULL,
  \`EMS_FOR_NONMODES\` tinyint\(1\) DEFAULT NULL DEFAULT \'0\',
\) ENGINE=MyISAM DEFAULT CHARSET=latin1 COMMENT=\' \';

CREATE TABLE \`ds_tracker\` \(
  \`DS_ID\` smallint\(5\) unsigned DEFAULT NULL COMMENT \' \',
  \`POS_LAT_DEG\` double DEFAULT NULL COMMENT \' \',
  \`POS_LONG_DEG\` double DEFAULT NULL COMMENT \' \',
  \`UPDATE_CYCLE_MS\` smallint\(6\) DEFAULT NULL COMMENT \' \',
  \`WGS_ELEV_CARTESIAN_M\` double DEFAULT NULL COMMENT \'Elevation \(m\) of stereographic/Cartesian plan above WGS84.\',
  \`REFERENCE_PERIOD\` double DEFAULT NULL COMMENT \' \',
  \`COORD_SYS\` enum\(\'W\',\'C\'\) DEFAULT NULL COMMENT \'WGS or cartesian\',
  \`doi_id\` smallint\(6\) DEFAULT NULL COMMENT \'Tracker DOI ID\',
\) ENGINE=MyISAM DEFAULT CHARSET=latin1 COMMENT=\' \';

CREATE TABLE \`le_ds\` \(
  \`DS_ID\` smallint\(5\) unsigned DEFAULT NULL COMMENT \' \',
  \`DS_NAME\` varchar\(40\) DEFAULT \'*** to be changed ***\' COMMENT \' \',
  \`DS_SHORT_NAME\` varchar\(4\) DEFAULT \'????\' COMMENT \' \',
  \`SAC\` tinyint\(3\) unsigned DEFAULT NULL DEFAULT \'255\' COMMENT \' \',
  \`SIC\` tinyint\(3\) unsigned DEFAULT NULL DEFAULT \'255\' COMMENT \' \',
  \`IC_CODE\` int\(11\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`MSG_FMT\` tinyint\(4\) DEFAULT NULL DEFAULT \'3\' COMMENT \' \',
  \`APP_ID\` smallint\(6\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`LOCALTIME_OFFSET_MIN\` smallint\(6\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`MEASURED_TIME_EXPECTED\` enum\(\'Y\',\'N\'\) DEFAULT NULL DEFAULT \'Y\' COMMENT \' \',
  \`MAX_EVENTS\` mediumint\(9\) DEFAULT NULL DEFAULT \'1000\' COMMENT \' \',
  \`TIMESTAMP_TOLERANCE_MS\` smallint\(6\) DEFAULT NULL DEFAULT \'5000\' COMMENT \' \',
  \`MIN_MSG_PER_PERIOD\` mediumint\(9\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`MAX_MSG_PER_PERIOD\` mediumint\(9\) DEFAULT NULL DEFAULT \'2000\' COMMENT \' \',
  \`OPERATIONAL_DATE\` datetime DEFAULT NULL DEFAULT \'2000-01-01 00:00:00\' COMMENT \' \',
  \`DECOM_DATE\` datetime DEFAULT NULL DEFAULT \'2000-01-01 00:00:00\' COMMENT \' \',
  \`DS_TYPE\` tinyint\(4\) DEFAULT NULL DEFAULT \'0\' COMMENT \' \',
  \`COMM\` varchar\(250\) DEFAULT NULL DEFAULT \'-\' COMMENT \' \',
  \`UAP_NR\` tinyint\(4\) DEFAULT NULL,
\) ENGINE=MyISAM DEFAULT CHARSET=latin1 COMMENT=\' \';

CREATE TABLE \`sd_ads\` \(
  \`REC_NUM\` int\(10\) unsigned DEFAULT NULL COMMENT \'Ascending record number\',
  \`REC_TIME_POSIX\` int\(10\) unsigned DEFAULT NULL COMMENT \'POSIX recording time stamped by I/O process\',
  \`REC_TIME_MS\` smallint\(6\) DEFAULT NULL COMMENT \'ms fraction\',
  \`DS_ID\` smallint\(5\) unsigned DEFAULT NULL COMMENT \'Common Source Description ID, derived from SAC/SIC, Station Code etc.\',
  \`LINE_ID\` int\(10\) unsigned DEFAULT NULL COMMENT \'Communication line ID\',
  \`CAT\` tinyint\(4\) DEFAULT NULL COMMENT \'ASTERIX CAT\',
  \`SAC\` tinyint\(3\) unsigned DEFAULT NULL COMMENT \'ASTERIX SAC\',
  \`SIC\` tinyint\(3\) unsigned DEFAULT NULL COMMENT \'ASTERIX SIC\',
  \`RAW_MSG\` blob COMMENT \'Binary represetation\',
  \`REPORT_TYPE\` tinyint\(4\) DEFAULT NULL COMMENT \'ADS-B only\',
  \`TOD\` int\(11\) DEFAULT NULL COMMENT \'Time of Day \(1/128 sec from midnight\)\',
  \`TOD_CALCULATED\` enum\(\'C\',\'L\',\'N\',\'R\'\) DEFAULT NULL COMMENT \'C:Calculated, R:Recording time, N:From data, L:Local time transform\',
  \`TOD_ACCURACY\` tinyint\(4\) DEFAULT NULL COMMENT \'in 1/256 secs\',
  \`EMITTER_CATEGORY\` tinyint\(4\) DEFAULT NULL COMMENT \' \',
  \`SIMULATED_TARGET\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Simulated Plot/Track?\',
  \`TEST_TARGET\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Test Plot/Track?\',
  \`SPI\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`FROM_FFT\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`DIFFERENTIAL_CORRECTION\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`GROUND_BIT\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`SELECTED_ALT_CAPABILITY\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`DESCRIPTOR_ATP\` tinyint\(4\) DEFAULT NULL COMMENT \'Non unique, 24-bit ICAO, surface vehicle or anonymous address.!!! 24 bit? !!!\',
  \`ALT_REPORTING_CAPABILITY_FT\` double DEFAULT NULL COMMENT \'currently 25 or 100\',
  \`TARGET_ADDR\` int\(11\) DEFAULT NULL COMMENT \'24 bit target address / aircraft address / Mode-S address\',
  \`FIGURE_OF_MERIT_ACAS\` tinyint\(4\) DEFAULT NULL COMMENT \'unknown, ACAS \(not\) operational\',
  \`FIGURE_OF_MERIT_MULTIPLE\` tinyint\(4\) DEFAULT NULL COMMENT \'unknown, multiple navigational aids \(not\) operational\',
  \`FIGURE_OF_MERIT_DIFFERENTIAL\` tinyint\(4\) DEFAULT NULL COMMENT \'unknown, \(no\) differential correction\',
  \`POSITION_ACCURACY\` tinyint\(4\) DEFAULT NULL COMMENT \' \',
  \`VELOCITY_ACCURACY\` tinyint\(4\) DEFAULT NULL COMMENT \' \',
  \`POS_LAT_DEG\` double DEFAULT NULL COMMENT \'WGS84 coordinate latitude\',
  \`POS_LONG_DEG\` double DEFAULT NULL COMMENT \'WGS84 coordinate longitude\',
  \`ALT_GEO_FT\` double DEFAULT NULL COMMENT \'Geometric altitude, 3D Height\',
  \`ALT_BARO_FT\` mediumint\(9\) DEFAULT NULL COMMENT \'Barometric altitude, Mode C\',
  \`INTER_SEL_ALTITUDE_INFO\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`INTER_SEL_ALTITUDE_SOURCE\` tinyint\(4\) DEFAULT NULL COMMENT \'unknown, aircraft, FCU/MSP selected, FMS selected altitude\',
  \`INTER_SEL_ALTITUDE_FT\` mediumint\(9\) DEFAULT NULL COMMENT \' \',
  \`FINAL_SEL_ALTITUDE_VERTICAL\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`FINAL_SEL_ALTITUDE_HOLD\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`FINAL_SEL_ALTITUDE_APPROACH\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`FINAL_SEL_ALTITUDE_FT\` mediumint\(9\) DEFAULT NULL COMMENT \' \',
  \`AIRSPEED_KT\` double DEFAULT NULL COMMENT \' \',
  \`AIRSPEED_MACH\` double DEFAULT NULL COMMENT \' \',
  \`TRUE_AIRSPEED_KT\` double DEFAULT NULL COMMENT \' \',
  \`MAGNETIC_HEADING_DEG\` double DEFAULT NULL COMMENT \' \',
  \`BARO_VERTICAL_RATE_FTM\` double DEFAULT NULL COMMENT \' \',
  \`GEO_VERTICAL_RATE_FTM\` double DEFAULT NULL COMMENT \' \',
  \`GROUNDSPEED_KT\` double DEFAULT NULL COMMENT \' \',
  \`TRACK_ANGLE_DEG\` double DEFAULT NULL COMMENT \' \',
  \`TURNRATE_INDICATOR\` tinyint\(4\) DEFAULT NULL COMMENT \'N/A, left, right, straight\',
  \`TURNRATE_DEGPS\` double DEFAULT NULL COMMENT \'turn rate in Deg/sec\',
  \`CALLSIGN\` varchar\(8\) DEFAULT NULL COMMENT \' \',
  \`TARGET_STATUS\` tinyint\(4\) DEFAULT NULL COMMENT \' \',
  \`LINK_TECHNOLOGY_CDTI\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`LINK_TECHNOLOGY_MDS\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`LINK_TECHNOLOGY_UAT\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`LINK_TECHNOLOGY_VDL\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`LINK_TECHNOLOGY_OTHER\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`ROLL_ANGLE_DEG\` double DEFAULT NULL,
  \`CALC_ALT_GEO_FT\` double DEFAULT NULL COMMENT \'Calculated Geographical Altitude\',
  \`GEO_AREA_MASK\` bigint\(20\) DEFAULT NULL COMMENT \'Geographical area bit mask\',
  \`HASH_CODE\` tinyblob COMMENT \'ARTAS MD5 Hash Code \',
  \`DISPLAY_STATE\` int\(11\) DEFAULT NULL COMMENT \' \',
  \`POS_SYS_X_NM\` double DEFAULT NULL COMMENT \'System coordinate x\',
  \`POS_SYS_Y_NM\` double DEFAULT NULL COMMENT \'System coordinate y\',
  \`DO_260A\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`DOM_POSIX\` int\(1\) DEFAULT NULL,
  \`TOAP\` int\(11\) DEFAULT NULL,
  \`TOAV\` int\(11\) DEFAULT NULL,
  \`TORP\` int\(11\) DEFAULT NULL,
  \`TORV\` int\(11\) DEFAULT NULL,
  \`MODE3A_CODE\` double DEFAULT NULL,
\) ENGINE=MyISAM DEFAULT CHARSET=latin1 COMMENT=\' \';

CREATE TABLE \`sd_mlat\` \(
  \`REC_NUM\` int\(10\) unsigned DEFAULT NULL COMMENT \'ascending record number\',
  \`REC_TIME_POSIX\` int\(10\) unsigned DEFAULT NULL COMMENT \'POSIX recording time stamped by I/O process\',
  \`REC_TIME_MS\` smallint\(6\) DEFAULT NULL COMMENT \'ms fraction\',
  \`DS_ID\` smallint\(5\) unsigned DEFAULT NULL COMMENT \'Common Source Description ID, derived from SAC/SIC, Station Code etc.\',
  \`LINE_ID\` int\(10\) unsigned DEFAULT NULL COMMENT \'Communication line ID\',
  \`MSG_FMT\` tinyint\(4\) DEFAULT NULL COMMENT \'Message Format \(usually ASTERIX\), see X__SD_MSG_FMTS\',
  \`CAT\` tinyint\(4\) DEFAULT NULL COMMENT \'normally ASTERIX CAT 20\',
  \`SAC\` tinyint\(3\) unsigned DEFAULT NULL COMMENT \'ASTERIX SAC\',
  \`SIC\` tinyint\(3\) unsigned DEFAULT NULL COMMENT \'ASTERIX SIC\',
  \`RAW_MSG\` blob COMMENT \'binary represetation\',
  \`REPORT_TYPE\` tinyint\(4\) DEFAULT NULL COMMENT \'MLAT \(11\)\',
  \`TOD\` int\(11\) DEFAULT NULL COMMENT \'Time of Day \(1/128 sec from midnight\)\',
  \`TOD_CALCULATED\` enum\(\'C\',\'L\',\'N\',\'R\'\) DEFAULT NULL COMMENT \'C:Calculated, R:Recording time, N:From data, L:Local time transform\',
  \`POS_LAT_DEG\` double DEFAULT NULL COMMENT \'latitude in degrees\',
  \`POS_LONG_DEG\` double DEFAULT NULL COMMENT \'longitude in degrees\',
  \`POS_LOCAL_X_NM\` double DEFAULT NULL COMMENT \'x coordinate in nautical miles\',
  \`POS_LOCAL_Y_NM\` double DEFAULT NULL COMMENT \'y coordinate in nautical miles\',
  \`MODE2_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-2 Validated? Y, N\',
  \`MODE2_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-2 Garbled? Y, N\',
  \`MODE2_SMO\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-2 Smoothed? Y, N\',
  \`MODE2_CODE\` smallint\(6\) DEFAULT NULL COMMENT \'Mode-2 Code\',
  \`MODE1_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-1 Validated? Y, N\',
  \`MODE1_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-1 Garbled? Y, N\',
  \`MODE1_SMO\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-1 Smoothed? Y, N\',
  \`MODE1_CODE\` tinyint\(4\) DEFAULT NULL COMMENT \'Mode-1 Code\',
  \`MODE3A_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-3/A Validated? Y, N\',
  \`MODE3A_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-3/A Garbled? Y, N\',
  \`MODE3A_SMO\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-3/A Smoothed? Y, N\',
  \`MODE3A_CODE\` smallint\(6\) DEFAULT NULL COMMENT \'Mode-3/A Code\',
  \`FLIGHT_LEVEL_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flight level Validated? Y, N\',
  \`FLIGHT_LEVEL_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flight level Garbled? Y, N\',
  \`FLIGHT_LEVEL_FT\` mediumint\(9\) DEFAULT NULL COMMENT \'Flight level in feet\',
  \`ALT_GEO_FT\` mediumint\(9\) DEFAULT NULL COMMENT \'Height above WGS-84 ellipsoid in feet\',
  \`HEIGHT_3D_FT\` mediumint\(9\) DEFAULT NULL COMMENT \'Height above local coordinate system in feet\',
  \`TRACK_NUM\` smallint\(5\) unsigned DEFAULT NULL COMMENT \'Track number\',
  \`VELOCITY_VX_MS\` double DEFAULT NULL COMMENT \'x velocity in meters per second\',
  \`VELOCITY_VY_MS\` double DEFAULT NULL COMMENT \'y velocity in meters per second\',
  \`ACCEL_AX_MS2\` double DEFAULT NULL COMMENT \'x acceleration in meters per square second\',
  \`ACCEL_AY_MS2\` double DEFAULT NULL COMMENT \'y acceleration in meters per square second\',
  \`TARGET_ADDR\` int\(11\) DEFAULT NULL COMMENT \'24 bit target address / aircraft address / Mode-S address\',
  \`ACAS_COMM_CAPABILITY\` tinyint\(4\) DEFAULT NULL COMMENT \'Communications capability of the transponder, see X__SD_ACAS_COMMS\',
  \`ACAS_FLIGHT_STATUS\` tinyint\(4\) DEFAULT NULL COMMENT \'Flight status, see X__SD_ACAS_FLIGHT_STATUSES\',
  \`ACAS_MODES_SERVICE\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-S specific service capability?\',
  \`ACAS_ALT_CAPABILITY_FT\` double DEFAULT NULL COMMENT \'Altitude reporting capability, currently 25 or 100\',
  \`ACAS_AIRCRAFT_IDENTIFICATION\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Aircraft identification capability\',
  \`ACAS_BDS_1_A\` tinyint\(4\) DEFAULT NULL COMMENT \'BDS 1,0: bit 16\',
  \`ACAS_BDS_1_B\` tinyint\(4\) DEFAULT NULL COMMENT \'BDS 1,0: bits 37-40\',
  \`CALLSIGN\` varchar\(8\) DEFAULT NULL COMMENT \'Aircraft identification\',
  \`MODES_MB_DATA\` tinyblob COMMENT \'Raw Mode S MB Data \(= BDS registers\)\',
  \`TRACK_CONFIRMED\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Y = firm track, N = tentative track\',
  \`TRACK_END\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Y = End of track, N = Track is still alive\',
  \`TRACK_COASTED\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Coasted? Y, N\',
  \`TRACK_CLIMB_DESC_MODE\` char\(1\) DEFAULT NULL COMMENT \'See X__SD_TRACK_CLIMB_DESC_MODES\',
  \`TRACK_MANOEUVRE_HORI\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Y = horizontal Manoeuvre, N = No Manoeuvre\',
  \`POS_SMOOTHED\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Y = smoothed position, N = measured position\',
  \`TRACK_GHOST_TARGET\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Y = Ghost Target, N = True Target\',
  \`POS_DOP_X\` double DEFAULT NULL COMMENT \'Dilution of precision along the x axis\',
  \`POS_DOP_Y\` double DEFAULT NULL COMMENT \'Dilution of precision along the y axis\',
  \`POS_DOP_XY\` double DEFAULT NULL COMMENT \'Square root of dilution of precision in the x-y plane \',
  \`POS_STD_DEV_X_M\` double DEFAULT NULL COMMENT \'Standard deviation of x component in meters\',
  \`POS_STD_DEV_Y_M\` double DEFAULT NULL COMMENT \'Standard deviation of y component in meters\',
  \`POS_STD_DEV_CORRELATION_COEFF\` double DEFAULT NULL COMMENT \'Correlation coefficient of x and y components\',
  \`GEO_ALT_STD_DEV_M\` double DEFAULT NULL COMMENT \'Standard deviation of geometric altitude in meters\',
  \`SIMULATED_TARGET\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Simulated track?\',
  \`TEST_TARGET\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Test track?\',
  \`SPI\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Special position identification?\',
  \`RDP_CHAIN\` enum\(\'1\',\'2\'\) DEFAULT NULL COMMENT \'RDP Chain 1 or 2\',
  \`GROUND_BIT\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Transponder ground bit set?\',
  \`MAS_TRACK_NUM\` int\(11\) DEFAULT NULL COMMENT \'MAS unique track number\',
  \`CALC_ALT_GEO_FT\` double DEFAULT NULL COMMENT \'Calculated Geographical Altitude in feet\',
  \`GEO_AREA_MASK\` bigint\(20\) DEFAULT NULL COMMENT \'Geographical area bit mask\',
  \`HASH_CODE\` tinyblob COMMENT \'ARTAS MD5 Hash Code\',
  \`DISPLAY_STATE\` int\(11\) DEFAULT NULL COMMENT \'See table x__SD_DISPLAY_STATES\',
  \`POS_SYS_X_NM\` double DEFAULT NULL COMMENT \'System coordinate x in nautical miles\',
  \`POS_SYS_Y_NM\` double DEFAULT NULL COMMENT \'System coordinate y in nautical miles\',
  \`TRD_SSR\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`TRD_MS\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`TRD_HF\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`TRD_VDL4\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`TRD_UAT\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`TRD_DME\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`POS_LOCAL_X_NM_CALC\` enum\(\'C\',\'R\'\) DEFAULT NULL COMMENT \'C = computed, R = reported\',
  \`POS_LOCAL_Y_NM_CALC\` enum\(\'C\',\'R\'\) DEFAULT NULL COMMENT \'C = computed, R = reported\',
  \`POS_LAT_DEG_CALC\` enum\(\'C\',\'R\'\) DEFAULT NULL COMMENT \'C = computed, R = reported\',
  \`POS_LONG_DEG_CALC\` enum\(\'C\',\'R\'\) DEFAULT NULL COMMENT \'C = computed, R = reported\',
  \`POS_DOP_XY_CORRELATION_COEFF\` double DEFAULT NULL COMMENT \' \',
  \`POS_STD_DEV_LAT_DEG\` double DEFAULT NULL COMMENT \' \',
  \`POS_STD_DEV_LONG_DEG\` double DEFAULT NULL COMMENT \' \',
  \`POS_STD_DEV_LATLONG_DEG\` double DEFAULT NULL COMMENT \' \',
  \`POS_STD_DEV_LAT_M\` double DEFAULT NULL COMMENT \' \',
  \`POS_STD_DEV_LONG_M\` double DEFAULT NULL COMMENT \' \',
  \`POS_STD_DEV_LATLONG_CORR_COEFF\` double DEFAULT NULL COMMENT \' \',
  \`GEO_ALT_STD_DEV_FT\` double DEFAULT NULL,
  \`DOM_POSIX\` int\(1\) DEFAULT NULL,
  \`ALT_BARO_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL,
  \`ALT_BARO_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL,
  \`ALT_BARO_FT\` mediumint\(9\) DEFAULT NULL,
\) ENGINE=MyISAM DEFAULT CHARSET=latin1 COMMENT=\' \';

CREATE TABLE \`sd_radar\` \(
  \`REC_NUM\` int\(10\) unsigned DEFAULT NULL COMMENT \'Unique record id starting with 0 on every new recording\',
  \`REC_TIME_POSIX\` int\(10\) unsigned DEFAULT NULL COMMENT \'Recording time with accuracy of 1s; is stamped by the communication process\',
  \`REC_TIME_MS\` smallint\(6\) DEFAULT NULL COMMENT \'ms fraction of REC_TIME_POSIX\',
  \`DS_ID\` smallint\(5\) unsigned DEFAULT NULL COMMENT \'DATA SOURCE ID, is derived from table DS and its sub tables\',
  \`LINE_ID\` int\(10\) unsigned DEFAULT NULL COMMENT \'COMMUNICATION LINE ID determines the origin of the record, see table COMMS\',
  \`MSG_FMT\` tinyint\(4\) DEFAULT NULL COMMENT \'Protocol type as defined in X__SD_MSG_FMTS, contents shall be ASTERIX, Aircat 500, Alenia, FPS117, RAT31SL, RSRP, TRS22, RDIF, MADREC, EUROCONTROL, DDE, CD2, Ericsson\',
  \`CAT\` tinyint\(4\) DEFAULT NULL COMMENT \'ASTERIX Category\',
  \`SAC\` tinyint\(3\) unsigned DEFAULT NULL COMMENT \'ASTERIX System Area Code [I001/010, I002/010, I002/010, I034/010, I048/010, I062/010, I021/010]\',
  \`SIC\` tinyint\(3\) unsigned DEFAULT NULL COMMENT \'ASTERIX System Identification Code [I001/010, I002/010, I002/010, I034/010, I048/010, I062/010, I021/010]\',
  \`IC_CODE\` int\(11\) DEFAULT NULL COMMENT \'Non-ASTERIX source id\',
  \`RAW_MSG\` blob COMMENT \'Binary representation\',
  \`REPORT_TYPE\` tinyint\(4\) DEFAULT NULL COMMENT \'Report classification [I001/020, I048/020, etc] as enrichment, see X__SD_REPORT_TYPES\',
  \`TOD\` int\(11\) DEFAULT NULL COMMENT \'Measured time / \(truncated\) Time of Day \(= ms since last midnight\), [I001/141, I021/030, I048/140]\',
  \`TOD_CALCULATED\` enum\(\'C\',\'L\',\'N\',\'R\'\) DEFAULT NULL COMMENT \'C:Calculated, R:Recording time, N:From data, L:Local time transform\',
  \`DETECTION_TYPE\` tinyint\(4\) DEFAULT NULL COMMENT \'Detection type [I030/080 TYPE, I062/340 #6 TYP], see X__SD_DETECTION_TYPES\',
  \`SIMULATED_TARGET\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Y = Simulated, N = actual plot/track \(I001/020 SIM, I021/040 SIM, I048/020 SIM]\',
  \`TEST_TARGET\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Y = Test target report, N = Real target report \(I001/020 TST, I021/040 TST, I048/020 TST]\',
  \`ANTENNA\` enum\(\'1\',\'2\'\) DEFAULT NULL COMMENT \'Antenna 1 or 2\',
  \`MIL_IDENT\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Y = military, N = default [I001/020 MI, I048/020 MI, I062/080 MI]\',
  \`MODE4_FRIENDLY\` enum\(\'-\',\'F\',\'U\',\'N\'\) DEFAULT NULL COMMENT \'Mode-4 interrorgation type: - = no interrogation, F = Friendly target, U = Unknown Target, N = No Reply [I048/020 FOE/FRI]\',
  \`RDP_CHAIN\` enum\(\'1\',\'2\'\) DEFAULT NULL COMMENT \'Report from which RDP Chain number: 1 or 2 [I001/020 RDP, I048/020 RDP]\',
  \`SPI\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Special position indication? \(Y/N\) [I001/020 SPI, I021/040 SPI, , I048/020 SPI]\',
  \`CIVIL_EMERGENCY\` tinyint\(4\) DEFAULT NULL COMMENT \'0 = default, 5 = code 7500 \(unlawful interference\), 6 = code 7600 \(radio comunnication failure\), 7 = code 7700 \(emergency\) [I001/020 DS1/DS2]\',
  \`MIL_EMERGENCY\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: military emergency? \(Y/N\) [I001/020 MI, I048/020 ME]\',
  \`FROM_FFT\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Y = from Fixed Field Transponder, N = from Aircraft [I001/020 RAB, , I021/040 RAB, I048/020 RAB]\',
  \`TARGET_ADDR\` int\(11\) DEFAULT NULL COMMENT \'24 bit target addreess / aircraft address / Mode-S address assigned uniquely to each aircraft [I021/080, I048/220]\',
  \`CALLSIGN\` varchar\(8\) DEFAULT NULL COMMENT \'aircraft identification when flight plan is available or the plan is available [I021/170, I048/240]\',
  \`POS_RANGE_NM\` double DEFAULT NULL COMMENT \'Measured position in polar coordinates: Rho in NM [I001/040, I048/040]\',
  \`POS_AZM_DEG\` double DEFAULT NULL COMMENT \'Measured position in polar coordinates: Theta in Ã‚Â¿Ã‚Â¿ [I001/040, I048/040]\',
  \`POS_LOCAL_X_NM\` double DEFAULT NULL COMMENT \'Calculated x position in Cartesian coordinates [I001/042, I048/042]\',
  \`POS_LOCAL_Y_NM\` double DEFAULT NULL COMMENT \'Calculated y position in Cartesian coordinates [I001/042, I048/042]\',
  \`POS_LAT_DEG\` double DEFAULT NULL COMMENT \'WGS84 coordinate latitude\',
  \`POS_LONG_DEG\` double DEFAULT NULL COMMENT \'WGS84 coordinate longitude\',
  \`MODE2_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-2 valid? \(Y,N\) [I001/050 V, I048/050 V]\',
  \`MODE2_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-2 garbled? \(Y,N\) [I001/050 G, I048/050 G]\',
  \`MODE2_SMO\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Y = Mode-2 is smoothed, N = Mode-2 as derived from the reply of the transponder [I001/050 L, I048/050 L]\',
  \`MODE2_CODE\` smallint\(6\) DEFAULT NULL COMMENT \'Mode-2 Code in octal representation [I001/050, I048/050]\',
  \`MODE2_QX\` smallint\(6\) DEFAULT NULL COMMENT \'Mode-2 Confidence indicator, 12 bits, each bit indicating low quality if it is 1, NULL is the same 0 \(all bits have high quality\) [I001/060 QXi, I048/050 QXi]\',
  \`MODE1_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-1 valid? \(Y,N\) [I001/055 V, I048/055 V]\',
  \`MODE1_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-1 garbled? \(Y,N\) [I001/055 G, I048/055 G]\',
  \`MODE1_SMO\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Y = Mode-1 is smoothed, N = Mode-1 as derived from the reply of the transponder [I001/055 L, I048/055 L]\',
  \`MODE1_CODE\` tinyint\(4\) DEFAULT NULL COMMENT \'Mode-1 Code in octal representation [I001/055, I048/055]\',
  \`MODE1_QX\` tinyint\(4\) DEFAULT NULL COMMENT \'Mode-1 Confidence indicator, 6 bits, each bit indicating low quality if it is 1, NULL is the same 0 \(all bits have high quality\) [I001/065 QXi, I048/065 QXi]\',
  \`MODE3A_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-3/A valid? \(Y,N\) [I001/070 V, I048/070 V]\',
  \`MODE3A_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-3/A garbled? \(Y,N\) [I001/070 G, I048/070 G]\',
  \`MODE3A_SMO\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Y = Mode-3/A is smoothed, i.e. not extracted during last scan, N = Mode-3/A as derived from the reply of the transponder [I001/070 L, I048/070 L]\',
  \`MODE3A_CODE\` smallint\(6\) DEFAULT NULL COMMENT \'Mode-3/A Code in octal representation [I001/070, I048/070]\',
  \`MODE3A_QX\` smallint\(6\) DEFAULT NULL COMMENT \'Mode-3/A Confidence indicator, 12 bits, each bit indicating low quality if it is 1, NULL is the same 0 \(all bits have high quality\) [I001/080 QXi, I048/080 QXi]\',
  \`MODEC_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-C valid? \(Y,N\) [I001/090 V, I048/090 V]\',
  \`MODEC_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-C garbled? \(Y,N\) [I001/090 G, I048/090 G]\',
  \`MODEC_CODE_FT\` mediumint\(9\) DEFAULT NULL COMMENT \'Mode-C Code Flight Level in Ft [I001/090, I048/090]\',
  \`MODEC_V_GRAY\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-C valid? \(Y,N\) [I001/100 V, I048/100 V]\',
  \`MODEC_G_GRAY\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-C garbled? \(Y,N\) [I001/100 G, I048/100 G]\',
  \`MODEC_CODE_GRAY\` smallint\(6\) DEFAULT NULL COMMENT \'Mode-C Code as received from the transponder [I001/100, I048/100]\',
  \`MODEC_QX_GRAY\` smallint\(6\) DEFAULT NULL COMMENT \'Mode-C Confidence indicator, 12 bits, each bit indicating low quality if it is 1, NULL is the same 0 \(all bits have high quality\) [I001/060 QXi, I048/050 QXi]\',
  \`HEIGHT_3D_FT\` mediumint\(9\) DEFAULT NULL COMMENT \'Height in Ft measured by a 3D radar [048/110]\',
  \`SSR_RUNLENGTH_DEG\` smallint\(6\) DEFAULT NULL COMMENT \'SSR plot runlength in degree [048/130 #1 SRL]\',
  \`MSSR_REPLIES_NUM\` smallint\(6\) DEFAULT NULL COMMENT \'Number of received replies from \(M\)SSR [048/130 #2 SRR]\',
  \`MSSR_AMPLITUDE_DBM\` smallint\(6\) DEFAULT NULL COMMENT \'Amplitude of \(M\)SSR reply in dBm [048/130 #3 SAM]\',
  \`PSR_RUNLENGTH_DEG\` smallint\(6\) DEFAULT NULL COMMENT \'Primary plot runlength in Ã‚Â¿Ã‚Â¿ [048/130 #4 PRL]\',
  \`PSR_AMPLITUDE_DBM\` smallint\(6\) DEFAULT NULL COMMENT \'Amplitude of primary plot in dBm [048/130 #5 PAM]\',
  \`PSR_SSR_RANGE_DIFF_NM\` double DEFAULT NULL COMMENT \'Difference in range between PSR and SSR plot in NM [048/130 #6 RDP]\',
  \`PSR_SSR_AZM_DIFF_DEG\` double DEFAULT NULL COMMENT \'Difference in azimuth between PSR and SSR plot in NM [048/130 #6 RDP]\',
  \`TRACK_NUM\` smallint\(5\) unsigned DEFAULT NULL COMMENT \'Track number, can also be plot number for CAT 001\',
  \`TRACK_CONFIRMED\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Track confirmed? [I001/170 CON, I048/170 CNF]\',
  \`TRACK_TYPE\` enum\(\'P\',\'S\',\'C\',\'N\',\'I\'\) DEFAULT NULL COMMENT \'P \(Primary\), S\(SSR\), C\(Combined\), N\(Not primary, SSR/Combined\), I\(Invalid\)\',
  \`TRACK_DOUBTFUL\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Plot to Track association doubtful? [I001/170 DOU, I048/170 DOU]\',
  \`TRACK_MANOEUVRE_HORI\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Horizontal manoeuvring? [I001/170 MAN, I048/170 MAN]\',
  \`TRACK_CLIMB_DESC_MODE\` enum\(\'M\',\'C\',\'D\',\'I\'\) DEFAULT NULL COMMENT \'Climb/Descend Mode: M = Maintaining, C = Climbing, D = Descending, I = Invalid [I048/170 CDM]\',
  \`TRACK_END\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: End of Track? [I001/170 TRE, I048/170 TRE]\',
  \`TRACK_GHOST_TARGET\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Y = Ghost Target, N = True Target [I001/170 GHO, I048/170 GHO]\',
  \`TRACK_RDP_CHAIN\` enum\(\'1\',\'2\'\) DEFAULT NULL COMMENT \'RDP Chain 1 or 2 [I001/170 RDPC]\',
  \`TRACK_SUP\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: Track maintained with track information from neighbouring Node B on the cluster, or network? [I048/170 SUP]\',
  \`TRACK_SLANT_CORR\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Type of plot coordinate transformation mechanism in slant range correction technique? [I048/170 TCC]\',
  \`TRACK_GROUNDSPEED_KT\` double DEFAULT NULL COMMENT \'Calculated track velocity expressed in polar coordinates, groundspeed in Kt [I001/200, I021/160, I048/200]\',
  \`TRACK_HEADING_DEG\` double DEFAULT NULL COMMENT \'Calculated track velocity expressed in polar coordinates, angle in Ã‚Â¿Ã‚Â¿ [I001/200, I021/160, I048/200]\',
  \`TRACK_SIGMA_X_NM\` double DEFAULT NULL COMMENT \'Standard deviation on the horizontal axis of the local grid system [I048/210 Sigma\(X\)]]\',
  \`TRACK_SIGMA_Y_NM\` double DEFAULT NULL COMMENT \'Standard deviation on the vertical axis of the local grid system [I048/210 Sigma\(Y\)]]\',
  \`TRACK_SIGMA_V_KT\` double DEFAULT NULL COMMENT \'Standard deviation on the groundspeed within the local grid system [I048/210 Sigma\(V\)]]\',
  \`TRACK_SIGMA_H_DEG\` double DEFAULT NULL COMMENT \'Standard deviation on the angle within the local grid system [I048/210 Sigma\(H\)]]\',
  \`ACAS_COMM_CAPABILITY\` tinyint\(4\) DEFAULT NULL COMMENT \'ACAS Communications capability of the transponder, see X__SD_ACAS_COMMS [I048/230 COM]\',
  \`ACAS_FLIGHT_STATUS\` tinyint\(4\) DEFAULT NULL COMMENT \'ACAS Flight status, see X__SD_ACAS_FLIGHT_STATUS [I048/230 STAT]\',
  \`ACAS_MODES_SERVICE\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: ACAS Mode-S specifific service capability? \(Y/N\) [I048/230 MMSC]\',
  \`ACAS_ALT_CAPABILITY_FT\` double DEFAULT NULL COMMENT \'Altitude reporting capability, currently 25 or 100, replaces old ACAS_25FT_REPORTING column\',
  \`ACAS_AIRCRAFT_IDENTIFICATION\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Flag: ACAS Aircraft identification capability? \(Y/N\) [I048/230 AIC]\',
  \`ACAS_BDS_1_A\` tinyint\(4\) DEFAULT NULL COMMENT \'BDS 1,0 bit 16 [I048/230 B1A]\',
  \`ACAS_BDS_1_B\` tinyint\(4\) DEFAULT NULL COMMENT \'BDS 1,0 bits 37-40 [I048/230 B1B]\',
  \`MODES_MB_DATA\` tinyblob COMMENT \'Raw Mode S MB Data \(= BDS registers\)\',
  \`MAS_TRACK_NUM\` int\(11\) DEFAULT NULL COMMENT \' \',
  \`SCAN_NUM\` int\(11\) DEFAULT NULL COMMENT \'Scan number\',
  \`CALC_ALT_GEO_FT\` double DEFAULT NULL COMMENT \'Calculated Geographical Altitude\',
  \`GEO_AREA_MASK\` bigint\(20\) DEFAULT NULL COMMENT \'Geographical area bit mask\',
  \`HASH_CODE\` tinyblob COMMENT \'ARTAS MD5 Hash Code\',
  \`DISPLAY_STATE\` int\(11\) DEFAULT NULL COMMENT \' \',
  \`POS_SYS_X_NM\` double DEFAULT NULL COMMENT \'System coordinate x\',
  \`POS_SYS_Y_NM\` double DEFAULT NULL COMMENT \'System coordinate y\',
  \`POS_LOCAL_X_NM_CALC\` enum\(\'C\',\'R\'\) DEFAULT NULL COMMENT \'C = computed, R = reported\',
  \`POS_LOCAL_Y_NM_CALC\` enum\(\'C\',\'R\'\) DEFAULT NULL COMMENT \'C = computed, R = reported\',
  \`POS_RANGE_NM_CALC\` enum\(\'C\',\'R\'\) DEFAULT NULL COMMENT \'C = computed, R = reported\',
  \`POS_AZM_DEG_CALC\` enum\(\'C\',\'R\'\) DEFAULT NULL COMMENT \'C = computed, R = reported\',
  \`DOM_POSIX\` int\(1\) DEFAULT NULL,
  \`ALT_BARO_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL,
  \`ALT_BARO_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL,
  \`GROUND_BIT\` enum\(\'Y\',\'N\'\) DEFAULT NULL,
  \`ALT_BARO_FT\` mediumint\(9\) DEFAULT NULL,
\) ENGINE=MyISAM DEFAULT CHARSET=latin1 COMMENT=\'\(Common\) SURVEILANCE \(Data\) Table for plots and local tracks\';

CREATE TABLE \`sd_track\` \(
  \`REC_NUM\` int\(10\) unsigned DEFAULT NULL COMMENT \'Unique record id starting with 0 on every new recording\',
  \`REC_TIME_POSIX\` int\(10\) unsigned DEFAULT NULL COMMENT \'Recording time with accuracy of 1s; is stamped by the communication process\',
  \`REC_TIME_MS\` smallint\(6\) DEFAULT NULL COMMENT \'ms fraction of REC_TIME_POSIX\',
  \`DS_ID\` smallint\(5\) unsigned DEFAULT NULL COMMENT \'DATA SOURCE ID, is derived from table DS and its sub tables\',
  \`LINE_ID\` int\(10\) unsigned DEFAULT NULL COMMENT \'COMMUNICATION LINE ID determines the origin of the record, see table COMMS\',
  \`MSG_FMT\` tinyint\(4\) DEFAULT NULL COMMENT \'Message format as defined in X__SD_MSG_FMTS, contents shall be ASTERIX, Aircat 500, Alenia, FPS117, RAT31SL, RSRP, TRS22, RDIF, MADREC, EUROCONTROL, DDE, CD2, Ericsson\',
  \`CAT\` tinyint\(4\) DEFAULT NULL COMMENT \'ASTERIX Category\',
  \`SAC\` tinyint\(3\) unsigned DEFAULT NULL COMMENT \'ASTERIX System Area Code [I030/010, I062/010]\',
  \`SIC\` tinyint\(3\) unsigned DEFAULT NULL COMMENT \'ASTERIX System Identification Code [I030/010, I062/010]\',
  \`IC_CODE\` int\(11\) DEFAULT NULL COMMENT \' \',
  \`RAW_MSG\` blob COMMENT \'Binary represetation\',
  \`REPORT_TYPE\` tinyint\(4\) DEFAULT NULL COMMENT \'Report classification, see X__SD_REPORT_TYPES\',
  \`TOD\` int\(11\) DEFAULT NULL COMMENT \'Time of Message / Time of Day \(= ms since last midnight\), [I030/020, I062/070]\',
  \`TOD_CALCULATED\` enum\(\'C\',\'L\',\'N\',\'R\'\) DEFAULT NULL COMMENT \'C:Calculated, R:Recording time, N:From data, L:Local time transform\',
  \`MULTIPLE_SOURCES\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Is the source a multiple-data-source [Y] or single-data-source [N]\',
  \`DETECTION_TYPE\` tinyint\(4\) DEFAULT NULL COMMENT \'PSR, SSR, CMB, INV, \(MISS\)?, ...\',
  \`TARGET_ADDR\` int\(11\) DEFAULT NULL COMMENT \'24 bit target address / aircraft address / Mode-S address\',
  \`CALLSIGN\` varchar\(8\) DEFAULT NULL COMMENT \'Aircraft identification\',
  \`TRACK_NUM\` smallint\(5\) unsigned DEFAULT NULL COMMENT \'Track number [I030/050 SYSTEM TRACK NUMBER, I062/040]\',
  \`TRACK_CONFIRMED\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Y or N \(tentative\)\',
  \`SIMULATED_TARGET\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Simulated Track? Y, N\',
  \`AIRCRAFT_DERIVED\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`TRACK_COASTED\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`TRACK_PSR_AGE\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`TRACK_END\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Y = End of track, N = Track is still alive\',
  \`TRACK_CREATED\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`TRACK_SLANT_CORR_TYPE\` tinyint\(4\) DEFAULT NULL COMMENT \'see X__SD_TRACK_SLANT_CORR_TYPES\',
  \`FORMATION_FLIGHT\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`TRACK_AMALGAMATED\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`SPI\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`MIL_EMERGENCY\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`TRANSPONDER_DELAY_CORR\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \' \',
  \`POS_LOCAL_X_NM\` double DEFAULT NULL COMMENT \'Calculated Cartesian track X position \(low or high resolution\) [I030/110, I062/100 or I062/101]\',
  \`POS_LOCAL_Y_NM\` double DEFAULT NULL COMMENT \'Calculated Cartesian track Y position \(low or high resolution\) [I030/110, I062/100 or I062/101]\',
  \`POS_LAT_DEG\` double DEFAULT NULL COMMENT \'Calculated WGS84 track latitude position \(low or high resolution\) [I062/105 or I062/106]\',
  \`POS_LONG_DEG\` double DEFAULT NULL COMMENT \'Calculated WGS84 track longitude position \(low or high resolution\) [I062/105 or I062/106]\',
  \`ALT_GEO_FT\` double DEFAULT NULL COMMENT \'Calculated geometric altitude  [I030/130,I062/130 dependend on I062/080 SRC]\',
  \`ALT_BARO_FT\` mediumint\(9\) DEFAULT NULL COMMENT \'Calculated barometric altitude [I030/130,I062/135 dependend on I062/080 SRC]\',
  \`ALT_BARO_MORE_RELIABLE\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Barometric altitude more reliable? Y, N\',
  \`MODE3A_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-3/A Valid? Y, N\',
  \`MODE3A_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-3/A Garbled? Y, N\',
  \`MODE3A_CODE\` smallint\(6\) DEFAULT NULL COMMENT \'Code, 4 octels\',
  \`MODEC_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-C Valid? Y, N\',
  \`MODEC_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL COMMENT \'Mode-C Garbled? \',
  \`MODEC_CODE_FT\` mediumint\(9\) DEFAULT NULL COMMENT \'Flight Level / Altitude in Ft\',
  \`GROUNDSPEED_KT\` double DEFAULT NULL COMMENT \' \',
  \`HEADING_DEG\` double DEFAULT NULL COMMENT \' \',
  \`MOF_TRANS\` tinyint\(4\) DEFAULT NULL COMMENT \'Mode of flight - Transversal acceleration: 0 = Constant Course, 1 = Right Turn, 2 = Left Turn, 3 = Undetermined, see also X__SD_MOF_TRANS [I030/200 TRANS, I062/200 TRANS]\',
  \`MOF_LONG\` tinyint\(4\) DEFAULT NULL COMMENT \'Mode of flight - Longitudinal acceleration: 0 = Constant Groundspeed, 1 = Increasing Groundspeed, 2 = Decreasing Groundspeed, 3 = Undetermined, see also X__SD_MOF_LONG [I030/200 LONGI, I062/200 LONG]\',
  \`MOF_VERT\` tinyint\(4\) DEFAULT NULL COMMENT \'Mode of flight - Vertical acceleration: 0 = Level Flight, 1 = Climb, 2 = Descent, 3 = Undetermined, see also X__SD_MOF_VERT [I030/200 LONGI, I062/200 LONG]\',
  \`CALC_VERTICAL_RATE_FTM\` double DEFAULT NULL COMMENT \' \',
  \`TURNRATE_DEGPS\` double DEFAULT NULL COMMENT \'Turn rate in Deg/sec\',
  \`MODES_MB_DATA\` tinyblob COMMENT \'Raw Mode S MB Data \(= BDS registers\)\',
  \`CALC_ALT_GEO_FT\` double DEFAULT NULL COMMENT \'Calculated Geographical Altitude\',
  \`GEO_AREA_MASK\` bigint\(20\) DEFAULT NULL COMMENT \'Geographical area bit mask\',
  \`HASH_CODE\` tinyblob COMMENT \'ARTAS MD5 Hash Code\',
  \`MAS_TRACK_NUM\` int\(11\) DEFAULT NULL COMMENT \' \',
  \`DISPLAY_STATE\` int\(11\) DEFAULT NULL COMMENT \' \',
  \`POS_SYS_X_NM\` double DEFAULT NULL COMMENT \'System coordinate x\',
  \`POS_SYS_Y_NM\` double DEFAULT NULL COMMENT \'System coordinate y\',
  \`POS_LOCAL_X_NM_CALC\` enum\(\'C\',\'R\'\) DEFAULT NULL COMMENT \'C = computed, R = reported\',
  \`POS_LOCAL_Y_NM_CALC\` enum\(\'C\',\'R\'\) DEFAULT NULL COMMENT \'C = computed, R = reported\',
  \`POS_LAT_DEG_CALC\` enum\(\'C\',\'R\'\) DEFAULT NULL COMMENT \'C = computed, R = reported\',
  \`POS_LONG_DEG_CALC\` enum\(\'C\',\'R\'\) DEFAULT NULL COMMENT \'C = computed, R = reported\',
  \`MODEC_AGE\` double DEFAULT NULL,
  \`MODEC_SOURCE\` char\(1\) DEFAULT NULL,
  \`DOM_POSIX\` int\(1\) DEFAULT NULL,
  \`CIVIL_EMERGENCY\` tinyint\(4\) DEFAULT NULL COMMENT \'Civil emergency\',
  \`LM_MODE3A_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL,
  \`LM_MODE3A_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL,
  \`LM_MODE3A_S\` enum\(\'Y\',\'N\'\) DEFAULT NULL,
  \`LM_ALT_BARO_V\` enum\(\'Y\',\'N\'\) DEFAULT NULL,
  \`LM_ALT_BARO_G\` enum\(\'Y\',\'N\'\) DEFAULT NULL,
  \`SELECTED_ALT_BARO_FT\` double DEFAULT NULL,
  \`SELECTED_ALT_BARO_SOURCE\` double DEFAULT NULL,
  \`MEASURED_MODE3A_AGE_S\` double DEFAULT NULL,
  \`LM_MODE3A_CODE\` double DEFAULT NULL,
  \`MEASURED_ALT_BARO_FT\` double DEFAULT NULL,
  \`LM_ALT_BARO_FT\` double DEFAULT NULL,
  \`LM_ALT_GEO_FT\` double DEFAULT NULL,
  \`TRACKED_ALT_GEO_FT\` double DEFAULT NULL,
  \`MEASURED_ALT_BARO_AGE_S\` double DEFAULT NULL,
  \`FPL_CALLSIGN\` varchar\(8\) DEFAULT NULL,
  \`TRACKED_ALT_BARO_FT\` mediumint\(9\) DEFAULT NULL,
  \`TRACKED_MODE3A_CODE\` smallint\(6\) DEFAULT NULL,
\) ENGINE=MyISAM DEFAULT CHARSET=latin1 COMMENT=\'\(Common\) SURVEILANCE \(Data\) Table for system tracks\';
};

sub processFile {
   my ($recNum, $sType, $sName, $delimiter, $fileChunk, $csvData, $sqliteDB) = @_;

   my $configTableName;
   my $dataTableName;
   if ($sType eq 'A') {
      $configTableName = 'ds_ads';
      $dataTableName = 'sd_ads';
      $sName = 'ADS-B' if (!$sName);
   } elsif ($sType eq 'W') {
      $configTableName = 'ds_mlat';
      $dataTableName = 'sd_mlat';
      $sName = 'WAM' if (!$sName);
   } elsif ($sType eq 'R') {
      $configTableName = 'ds_radar';
      $dataTableName = 'sd_radar';
      $sName = 'RAD' if (!$sName);
   } elsif ($sType eq 'T') {
      $configTableName = 'ds_tracker';
      $dataTableName = 'sd_track';
      $sName = 'TRAKR' if (!$sName);
   } else {
      print "unknown type: $sType ($csvData shall not be converted) => bailing out!\n";
      return -1;
   }

   # prepare CSV file for import
   my $csvHeader;

   my %sensorIdList = ();
   my $dsIdIx = -1;
   my $defaultDsId = 1;

   my $recNumIx = -1;

   if ($fileChunk =~ m/^\d+[KMG]?$/) {
      (my $base = $fileChunk) =~ s/^(\d+)[\D*]?$/\1/g;
      (my $factor = $fileChunk) =~ s/^$base(\S*)$/\1/g;
      $fileChunk = $base;
      if ($factor) {
         if ($factor eq 'K') {
            $fileChunk = $base * 1000;
         } elsif ($factor eq 'M') {
            $fileChunk = $base * 1000000;
         } elsif ($factor eq 'G') {
            $fileChunk = $base * 1000000000;
         }
      }
   } else {
      $fileChunk = "";
   }

   my $tmpCSV = "/tmp/.csv2atsdb";
   my $tmpCSVcnt = 1;
   open(CSV, "<$csvData") or die "cannot open csv file '$csvData' for reading";
   while (<CSV>) {
      chop;

      if (!$csvHeader) {
         $csvHeader = $_;

         if (!/ds_id/i) {
            $csvHeader .= "${delimiter}DS_ID";
            $sensorIdList{$defaultDsId}++;
         } else {
            my $ix = 0;
            foreach (split("$delimiter", $csvHeader)) {
               if (/ds_id/i) {
                  $dsIdIx = $ix;
                  last;
               }
               $ix++;
            }
         }

         if (!/rec_num/i) {
            $csvHeader .= "${delimiter}REC_NUM";
         } else {
            my $ix = 0;
            foreach (split("$delimiter", $csvHeader)) {
               if (/rec_num/i) {
                  $recNumIx = $ix;
                  last;
               }
               $ix++;
            }
         }

         if ($fileChunk > 0 || $dsIdIx == -1 || $recNumIx == -1) {
            open(CSV_OUT, ">${tmpCSV}$tmpCSVcnt") or die "cannot open csv file '${tmpCSV}$tmpCSVcnt' for writing";
            print CSV_OUT "$csvHeader\n";
         }

         next;
      }

      my $line = $_;
      $recNum++;

      if ($dsIdIx == -1) {
         $line .= "${delimiter}$defaultDsId";
      } else {
         my @data = split("$delimiter");
         $sensorIdList{@data[$dsIdIx]}++;
      }

      $line .= "${delimiter}$recNum" if ($recNumIx == -1);

      if ($fileChunk > 0 || $dsIdIx == -1 || $recNumIx == -1) {
         if ($fileChunk && ($recNum % $fileChunk == 0)) {
            close(CSV_OUT);
            $tmpCSVcnt++;
            open(CSV_OUT, ">${tmpCSV}$tmpCSVcnt") or die "cannot open csv file '${tmpCSV}$tmpCSVcnt' for writing";
            print CSV_OUT "$csvHeader\n";
         }
         print CSV_OUT "$line\n";
      }
   }
   close(CSV_OUT) if ($fileChunk > 0 || $dsIdIx == -1 || $recNumIx == -1);
   close(CSV);

   if ($fileChunk > 0 || $dsIdIx == -1 || $recNumIx == -1) {
      for ($cnt = 1; $cnt <= $tmpCSVcnt; $cnt++) {
         my $resultData = `termsql -i ${tmpCSV}$cnt -o $sqliteDB -d '$delimiter' -p '$delimiter' -1 -k 'REC_NUM' -C -m csv -t $dataTableName --append`;
         unlink "${tmpCSV}$cnt";
      }
   } else {
      # fill the DB with the CSV data (in one go)
      my $resultData = `termsql -i $csvData -o $sqliteDB -d '$delimiter' -p '$delimiter' -1 -k 'REC_NUM' -C -m csv -t $dataTableName --append`;
   }

   # fill the sensor configuration data
   my $configAll = "/tmp/.csv2atsdb.le_ds";
   open(LE_DS, ">$configAll") or die "cannot open '$configAll' for writing";
   print LE_DS "DS_ID${delimiter}DS_NAME${delimiter}DS_SHORT_NAME\n";

   my $configData = "/tmp/.csv2atsdb.ds_table";
   open(CONFIG_TABLE, ">$configData") or die "cannot open '$configData' for writing";
   print CONFIG_TABLE "DS_ID${delimiter}POS_LAT_DEG${delimiter}POS_LONG_DEG\n";

   foreach $sensorId (keys %sensorIdList) {
      print LE_DS "$sensorId$delimiter$sName${delimiter}csv\n";
      print CONFIG_TABLE "$sensorId${delimiter}0.0${delimiter}0.0\n";
   }

   close(CONFIG_TABLE);
   close(LE_DS);

   my $result = `termsql -i $configAll -o $sqliteDB -d '$delimiter' -p '$delimiter' -1 -k 'DS_ID' -C -m csv -t le_ds --append > /dev/null`;
   unlink $configAll;

   my $resultConfig = `termsql -i $configData -o $sqliteDB -d '$delimiter' -p '$delimiter' -1 -k 'DS_ID' -C -m csv -t $configTableName --append > /dev/null`;
   unlink $configData;

   return $recNum;
}

# included modules
use Getopt::Long;

# declare input option variables
my $csvFile;
my $csvFileList;
my $sqliteFile;
my $survName;
my $survType;
my $schemaFile;
my $splitLines;
my $csvDelimiter;
my $keepDB;
GetOptions(
   "help|?"   => sub { usage (0); },
   'f=s' => \$csvFile,
   'l=s' => \$csvFileList,
   'o=s' => \$sqliteFile,
   'n=s' => \$survName,
   't=s' => \$survType,
   's=s' => \$schemaFile,
   'b=s' => \$splitLines,
   'd=s' => \$csvDelimiter,
   'keep' => \$keepDB,
);
$csvDelimiter ||= ';';

usage() if (!$csvFile && !$csvFileList);

my $schema = "";
if ($schemaFile) {
   $schema = $schemaFile;
} else {
   open(SCHEMA, ">$defaultSchemaFile");
   print SCHEMA $defaultSchema;
   close(SCHEMA);
   $schema = "$defaultSchemaFile";
}

# keep the same name and change the extension
($sqliteFile = $csvFile) =~ s%\.csv$%.db%g if (!$sqliteFile);

if (!$keepDB) {
   # delete an already existing DB
   unlink $sqliteFile if (-s $sqliteFile);

   # create the default (empty) sqlite DB
   my $sqliteCmd = `mysql2sqlite $schema`;
   open(PROCESS, "|sqlite3 $sqliteFile > /dev/null") or die "cannot open 'sqlite3' for writing";
   print PROCESS $sqliteCmd;
   close PROCESS;
}
# cleanup
unlink $defaultSchemaFile if (!$schemaFile);

if ($splitLines =~ m/^\d+[KMG]?$/) {
   (my $base = $splitLines) =~ s/^(\d+)[\D*]?$/\1/g;
   (my $factor = $splitLines) =~ s/^$base(\S*)$/\1/g;
   $splitLines = $base;
   if ($factor) {
      if ($factor eq 'K') {
         $splitLines = $base * 1000;
      } elsif ($factor eq 'M') {
         $splitLines = $base * 1000000;
      } elsif ($factor eq 'G') {
         $splitLines = $base * 1000000000;
      }
   }
} else {
   $splitLines = "";
}

my $recnum = 0;
if ($csvFileList) {
   open(FILE_LIST, "<$csvFileList") or die "cannot open '$csvFileList' for reading";
   print "processing file list $csvFileList\n";
   while (<FILE_LIST>) {
      chop;
      next if (!$_);
      my @file = split(";");
      next if (! -s @file[2]);
      print " * parsing type:@file[0] name:@file[1] file:@file[2]\n";
      $recnum = processFile($recnum, @file[0], @file[1], $csvDelimiter, $splitLines, @file[2], $sqliteFile);
   }
   close(FILE_LIST);
} else {
   processFile($recnum, $survType, $survName, $csvDelimiter, $splitLines, $csvFile, $sqliteFile);
}
